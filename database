import bcrypt
import sqlite3
import os


class UserManager:
    def __init__(self, db_file):
        self.conn = self.create_connection(db_file)
        self.create_table()

    def create_connection(self, db_file):
        base_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        user_data_dir = os.path.join(base_dir, "user_data")

        # Create the directory if it doesn't exist
        if not os.path.exists(user_data_dir):
            os.makedirs(user_data_dir)

        db_path = os.path.join(user_data_dir, db_file)
        conn = sqlite3.connect(db_path)
        return conn

    def create_table(self):
        c = self.conn.cursor()
        c.execute("""CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY, username TEXT NOT NULL,
         password TEXT NOT NULL)""")
        self.conn.commit()

    def signup(self, username, password):
        c = self.conn.cursor()
        hashed = bcrypt.hashpw(password.encode(), bcrypt.gensalt())
        c.execute("INSERT INTO users (username, password) VALUES (?, ?)", (username, hashed))
        self.conn.commit()
        print("You have successfully signed up!")

    def login(self, username, password):
        c = self.conn.cursor()
        c.execute("SELECT username, password FROM users WHERE username = ?", (username,))
        user = c.fetchone()
        if user is not None:
            if bcrypt.checkpw(password.encode(), user[1]):
                return True
        return False

    def display_users(self):
        c = self.conn.cursor()
        c.execute("SELECT * FROM users")
        users = c.fetchall()
        print(users)

    def find_user(conn, username):
        c = conn.cursor()
        c.execute("SELECT username, password FROM users WHERE username = ?", (username,))
        user = c.fetchone()
        if user is not None:
            return user
        else:
            return None

    def remove_users(self,username):
        c = self.conn.cursor()
        c.execute("DELETE FROM users WHERE username = ?", (username,))
        self.conn.commit()
        print("You have successfully removed the user!")

